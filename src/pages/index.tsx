import {
  SignIn,
  SignInButton,
  SignOutButton,
  SignedOut,
  UserButton,
  useUser,
} from "@clerk/nextjs";
import Head from "next/head";

import { RouterOutputs, api } from "~/utils/api";

const CreatePostWizard = () => {
  const { user } = useUser();

  console.log(user);

  if (!user) return null;

  return (
    <div className=" flex w-full">
      <img
        src={user.imageUrl}
        alt="Profile Image"
        className="h-14 w-14 rounded-full border-2 border-blue-400"
      />
      <input
        type="text"
        placeholder="tipe an emoji!"
        className=" m-2 grow bg-transparent p-2 pl-4 outline-none "
      />
    </div>
  );
};

type postWithUsers = RouterOutputs["posts"]["getAll"][number];
const PostViews = (props: postWithUsers) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="  border-b-2 border-slate-400 p-8">
      {post.content}
    </div>
  );
};

export default function Home() {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>Something Went Wrong!</div>;

  return (
    <>
      <Head>
        <title>Potato-x</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <UserButton afterSignOutUrl="/" />
        <div className=" h-full w-full border-x-2 border-slate-400 bg-teal-900 md:max-w-2xl">
          <div className=" static flex flex-row justify-between border-b-2 border-slate-400">
            <div className=" right-0 top-0 p-4 ">
              <CreatePostWizard />
            </div>
            {!user.isSignedIn && (
              <div className=" p-4">
                <SignInButton />
              </div>
            )}
            {!!user.isSignedIn && (
              <div className=" p-4">
                <SignOutButton />
              </div>
            )}
          </div>

          <div className="flex flex-col">
            {[...data, ...data]?.map((fullPost) => (
              <PostViews {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
